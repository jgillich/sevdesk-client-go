/*
sevDesk API

Testing CreditNoteApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_CreditNoteApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CreditNoteApiService BookCreditNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.BookCreditNote(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService CreatecreditNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CreditNoteApi.CreatecreditNote(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService CreditNoteGetPdf", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.CreditNoteGetPdf(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService CreditNoteSendBy", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.CreditNoteSendBy(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService DeletecreditNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.DeletecreditNote(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService GetCreditNotes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CreditNoteApi.GetCreditNotes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService GetcreditNoteById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.GetcreditNoteById(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService SendCreditNoteByPrinting", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.SendCreditNoteByPrinting(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService SendCreditNoteViaEMail", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.SendCreditNoteViaEMail(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditNoteApiService UpdatecreditNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var creditNoteId int32

		resp, httpRes, err := apiClient.CreditNoteApi.UpdatecreditNote(context.Background(), creditNoteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
